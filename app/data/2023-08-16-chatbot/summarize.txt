En este video, te voy a enseñar cómo crear tu chat de inteligencia artificial conectándonos al LLM de OpenAI como API. Utilizaremos el SDK de Verzel, que está bien unido a su framework de Nest. Verzel ha creado y publicado una librería para crear aplicaciones basadas en inteligencia artificial o que se apoyen en el uso de inteligencia artificial. Esta librería funciona muy bien con su framework Nest, construido sobre React. En este video, aprenderemos a hacer un chat uniéndonos a un LLM utilizando este SDK y cómo crear un chatbot con todo este potencial.

Podemos conectarnos a la API de OpenAI para consumir modelos como chat GPT-3, 4, a Home and Face, o también incorporar frameworks como Lancheng para hacer manipulaciones de un LLM de forma más compleja. Todo esto lo podemos orquestar con este SDK y entregar esos insumos a nuestra aplicación.

Podemos utilizar frameworks como Nest sobre React y SvelteKit utilizando Svelte. Verzel está soportando los frameworks que ellos mantienen, que en este caso son Nest y SvelteKit. En este video, vamos a ver cómo construir una aplicación sobre Nest, utilizando React como framework y ver cómo funciona este SDK construyendo nuestro propio chatbot.

Para comenzar, vamos a ir a la URL sdk.verzel.ai, donde encontraremos un demo de utilizar ciertos tipos de prompts con ciertos tipos de modelos. Nos interesa la parte de documentación, donde nos introducen hacia esta API o hacia este SDK. Vamos a construir un bot que utiliza OpenAI, siguiendo la guía que nos proporcionan. Explicaré paso a paso lo que está pasando en cada una de las cosas, ya que hay muchas cosas que están pasando detrás de esto.

Primero, vamos a crear una aplicación de Next utilizando el comando "npx create-next-app". Luego, instalaremos el SDK de AI y OpenAI Edge, y crearemos una key para poder consumir los modelos de OpenAI. Una vez hecho esto, crearemos un endpoint en nuestra API para procesar los mensajes del usuario y obtener la respuesta del modelo de OpenAI. Utilizaremos el SDK de Verzel AI para simplificar el proceso y gestionar los mensajes y respuestas.

Finalmente, implementaremos la interfaz de usuario utilizando el SDK de Verzel