En este video, comparto cómo actualizar una aplicación de Angular versión 16 a la versión 17, detallando el proceso paso a paso. La aplicación de ejemplo es una plataforma sencilla que ya utiliza Angular Material y componentes independientes, lo cual facilita la migración. Inicio recomendando la creación de una nueva rama en el repositorio para manejar la actualización, evitando así afectar la producción en caso de errores. 

El primer requisito es asegurarse de usar Node versión 18 como mínimo, para lo cual empleo Node Version Manager, permitiendo alternar entre versiones de Node según el proyecto. Actualizo el CLI de Angular a su versión más reciente y, a continuación, utilizo el comando `ng update` para que Angular me guíe en el proceso de actualización. Durante el proceso, enfrento un inconveniente con el paquete Angular ESLint, el cual resuelvo forzando la actualización para que sea compatible con la versión 17 de Angular.

Posteriormente, reviso los cambios automáticos realizados en los archivos de configuración y procedo a actualizar manualmente otros paquetes necesarios, como Angular CDK y Angular Material, para alinearlos con la versión 17. A lo largo de la actualización, hago commits regulares para mantener un registro del progreso y facilitar la reversión en caso necesario.

Finalmente, tras completar todas las actualizaciones y resolver los conflictos de paquetes, verifico que la aplicación funcione correctamente en la versión 17 de Angular, tanto en un entorno local como en producción, después de limpiar el caché para reflejar los cambios. Concluyo el video resaltando la importancia de este primer paso para desbloquear y aprovechar las nuevas características y mejoras que Angular versión 17 ofrece, anticipando videos futuros donde exploraré estas funcionalidades en detalle.