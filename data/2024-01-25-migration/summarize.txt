En este video les enseñaré cómo migrar una aplicación de la versión 16 de Angular a la versión más reciente, la versión 17. Vamos a llevar a cabo esta migración paso a paso, aprovechando todas las nuevas características que ofrece la versión 17. La aplicación que utilizaremos es una aplicación sencilla que utiliza Angular Material y Angular en su versión 16. Primero, debemos asegurarnos de tener instalada la versión mínima de Node requerida para la versión 17 de Angular, que es la versión 18. Recomiendo utilizar Node Version Manager para gestionar las versiones de Node en tu máquina. Una vez que tenemos la versión adecuada de Node, debemos actualizar el Angular CLI a la versión más reciente. Podemos hacer esto utilizando el comando "npm install -g @angular/cli@latest". Después de actualizar el CLI, podemos verificar la versión global utilizando el comando "ng version". En nuestro proyecto local, veremos que tenemos una versión diferente del CLI, que es la versión 16. Para actualizar nuestro proyecto local a la versión 17, utilizaremos el comando "ng update". Este comando nos mostrará qué paquetes debemos actualizar y nos proporcionará el comando para hacerlo. En mi caso, tuve un problema con el paquete Angular ESLint, pero pude solucionarlo utilizando el comando "ng update @angular-eslint/schematics --force". Después de actualizar todos los paquetes necesarios, podemos hacer una prueba local de nuestra aplicación utilizando el comando "ng serve". Si todo funciona correctamente, podemos hacer un pull request para fusionar los cambios en la rama principal. Una vez que se hayan fusionado los cambios, nuestra aplicación estará actualizada a la versión 17 de Angular. En resumen, en este video aprendimos cómo migrar una aplicación de la versión 16 de Angular a la versión 17. Actualizamos las dependencias, incluyendo el Angular CLI, y realizamos pruebas locales para asegurarnos de que todo funcione correctamente. Ahora estamos listos para aprovechar todas las nuevas características que ofrece la versión 17 de Angular.