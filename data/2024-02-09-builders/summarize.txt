En este video, exploro las novedades de Angular versión 17, destacando la introducción de tres diferentes builders para la construcción de aplicaciones: uno basado en Webpack, otro en ESBuild, y un tercero optimizado para server-side rendering. Detallo las ventajas de cada uno y cómo elegir el más adecuado según nuestras necesidades. Comienzo con el builder de Browser, ideal para quienes buscan minimizar la fricción en la migración a las nuevas características de Angular, especialmente si se tienen dependencias o personalizaciones ligadas a Webpack.

Luego, presento el builder Browser ESBuild, resaltando su velocidad superior gracias a estar escrito en Go, lo que lo hace significativamente más rápido que Webpack. Esta opción es particularmente atractiva para quienes buscan optimizar tiempos en integración continua y desarrollo local.

El foco principal del video es el builder Application, introducido en Angular versión 17, que combina ESBuild y Byte para un desarrollo más eficiente, especialmente pensado para facilitar tanto el server-side como el client-side rendering. Muestro cómo migrar a este nuevo builder desde versiones anteriores, destacando su configuración y los beneficios de rendimiento que ofrece. Este builder está en línea con la tendencia hacia el server-side rendering por defecto en frameworks modernos, prometiendo mejoras en carga inicial y SEO.

Finalmente, realizo una demostración práctica de la migración a Application en un proyecto existente, ajustando la configuración según la documentación oficial y destacando las mejoras en tiempos de construcción y organización de archivos resultantes. Concluyo con una reflexión sobre cuándo y por qué habilitar el server-side rendering, basándome en consideraciones de rendimiento y accesibilidad, y anticipando que Angular versión 18 podría hacer del server-side rendering la configuración por defecto.

Invito a la audiencia a suscribirse y participar en la discusión sobre server-side rendering, anunciando un próximo video dedicado exclusivamente a ese tema.